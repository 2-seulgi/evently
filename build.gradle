plugins {
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
dependencies {
    // --- Spring 기본 ---
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    // --- DB/Migration ---
    implementation 'org.flywaydb:flyway-core'     // DB 변경 이력 관리(Flyway)
    runtimeOnly  'com.mysql:mysql-connector-j'     // MySQL 드라이버 (런타임에만 필요)

    // --- Redis / 분산락 ---
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.redisson:redisson-spring-boot-starter:3.22.0'

    // --- JWT (JJWT) ---
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'   // API만 컴파일 타임에
    runtimeOnly  'io.jsonwebtoken:jjwt-impl:0.11.5'    // 구현체는 런타임에 로딩
    runtimeOnly  'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 직렬화 바인더

    // --- OpenAPI (Swagger UI) ---
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // --- QueryDSL (Java + Jakarta) ---
    implementation       'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor  'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor  'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor  'jakarta.persistence:jakarta.persistence-api'

    // --- Lombok (선택: Java 보일러플레이트 줄이기) ---
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // --- 개발 편의 ---
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // --- Test ---
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // JUnit/Mockito/AssertJ 포함
    testImplementation 'org.springframework.security:spring-security-test'

    // 통합테스트: Testcontainers (BOM으로 버전 일괄)
    testImplementation platform('org.testcontainers:testcontainers-bom:1.20.2')
    testImplementation 'org.testcontainers:mysql'

    // 단위 테스트만 H2  testRuntimeOnly로
    testRuntimeOnly 'com.h2database:h2'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

// --- QueryDSL Q클래스 생성 경로(IDE 인식 개선용 ) ---
def querydslDir = "$buildDir/generated/querydsl"
sourceSets {
    main {
        java {
            srcDirs += querydslDir
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

test {
    useJUnitPlatform()
}

tasks.named("test") {
    useJUnitPlatform()
}