plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'  // 버전 수정
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-cache'


    // ✅ QueryDSL 의존성 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'  // jakarta 추가
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta' // jakarta 추가
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // ✅ H2 Database 추가
    implementation 'com.h2database:h2'

    // Spring Boot Redis Starter (필수)
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // Redisson (분산 락 활용)
    implementation 'org.redisson:redisson-spring-boot-starter:3.22.0'
    // JSON 직렬화를 위한 Jackson (Redis 캐싱에 필요)
    implementation 'com.fasterxml.jackson.core:jackson-databind'
}

tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorGeneratedSourcesDirectory = file("build/generated/sources/annotationProcessor/java/main")
}

tasks.named("test") {
    useJUnitPlatform()
}